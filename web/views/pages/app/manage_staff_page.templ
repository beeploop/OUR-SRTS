package app

import (
	"github.com/beeploop/our-srts/internal/domain/entities"
	"github.com/beeploop/our-srts/internal/infrastructure/http/viewmodel"
	"github.com/beeploop/our-srts/internal/pkg/utils"
	"github.com/beeploop/our-srts/web/views/components"
	"github.com/beeploop/our-srts/web/views/layouts"
)

templ ManageStaffPage(admin viewmodel.Admin, accounts []viewmodel.Admin) {
	@layouts.MainLayout(admin) {
		@components.Banner(components.BannerProps{
			Title: "Staff Management",
		})
		@components.Divider()
		<div>
			<div class="mt-2 flex justify-end">
				@components.OffCanvas(components.OffCanvasProps{
					ID: "add-staff",
					Button: components.OCButton(components.OCButtonProps{
						Label:   "Add Staff",
						Variant: components.DEFAULT_BTN,
					}),
				}) {
					@addStaffForm()
				}
			</div>
			<div class="mt-2">
				<table class="w-full rounded-sm outline-1 outline-gray">
					<thead class="bg-primary text-white">
						<tr>
							<td class="p-2">Name</td>
							<td class="p-2">Username</td>
							<td class="p-2">Role</td>
							<td class="p-2">Status</td>
							<td class="p-2">Actions</td>
						</tr>
					</thead>
					<tbody class="divide-y divide-gray">
						if len(accounts) == 0 {
							<tr class="">
								<td class="p-2" colspan="5" align="center">Empty</td>
							</tr>
						} else {
							for _, account := range accounts {
								<tr class="">
									<td class="p-2">{ account.Fullname }</td>
									<td class="p-2">{ account.Username }</td>
									<td class="p-2">
										@components.SoftBadge(components.BadgeProps{
											Title:   utils.StripUnderscore(account.Role),
											Variant: utils.Ternary(account.Role == string(entities.ROLE_SUPER_ADMIN), components.SUCCESS_BADGE, components.WARNING_BADGE),
										})
									</td>
									<td class="p-2">
										if account.Enabled {
											@components.SolidBadge(components.BadgeProps{
												Title:   "Enabled",
												Variant: components.SUCCESS_BADGE,
											})
										} else {
											@components.SolidBadge(components.BadgeProps{
												Title:   "Disabled",
												Variant: components.ERROR_BADGE,
											})
										}
									</td>
									<td class="p-2">
										<span class="flex gap-2">
											<!-- disable button -->
											@components.OffCanvas(components.OffCanvasProps{
												ID: account.ID,
												Button: components.OCButton(components.OCButtonProps{
													Label:   "Disable",
													Variant: components.WARNING_BTN,
												}),
											}) {
												<h1>Disable Account</h1>
											}
											@components.OffCanvas(components.OffCanvasProps{
												ID: account.ID,
												Button: components.OCButton(components.OCButtonProps{
													Label:   "Delete",
													Variant: components.ERROR_BTN,
												}),
											}) {
												<h1>Delete Account</h1>
											}
										</span>
									</td>
								</tr>
							}
						}
					</tbody>
				</table>
			</div>
		</div>
	}
}

templ addStaffForm() {
	<form action="/app/manage-staff" method="POST">
		<h2 class="text-bold text-lg">Add Staff</h2>
		<div class="mt-4 grid gap-4">
			<div class="">
				<label for="fullname">Fullname</label>
				<br/>
				<input
					type="text"
					name="fullname"
					autofocus
					autocomplete="off"
					required
					class="mt-1.5 w-full rounded-md border border-gray p-2 focus:border-primary focus:outline-none"
					id="fullname"
					placeholder="fullname"
				/>
			</div>
			<div class="">
				<label for="username">Username</label>
				<br/>
				<input
					type="text"
					name="username"
					autofocus
					autocomplete="off"
					required
					class="mt-1.5 w-full rounded-md border border-gray p-2 focus:border-primary focus:outline-none"
					id="username"
					placeholder="username"
				/>
			</div>
			<div class="">
				<label for="password">Staff password</label>
				<p class="text-xs text-red-700">
					Password must be 
					<strong>
						at least 8 characters long, at least 1 uppercase, at least 1 lowercase, at least 1 special character,
						and no whitespace
					</strong>
				</p>
				<br/>
				<input
					type="password"
					name="password"
					autofocus
					autocomplete="off"
					required
					class="mt-1.5 w-full rounded-md border border-gray p-2 focus:border-primary focus:outline-none"
					id="password"
					placeholder="password"
				/>
			</div>
			<div class="flex justify-end gap-2">
				<button
					type="submit"
					class="w-20 rounded-md bg-primary px-3 py-1.5 text-white hover:opacity-75 cursor-pointer"
				>Save</button>
			</div>
		</div>
	</form>
}
