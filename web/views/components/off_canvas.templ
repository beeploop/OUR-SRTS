package components

import "fmt"

type OffCanvasProps struct {
	ID     string
	Button templ.Component
}

type OCButtonVariant int

const (
	SUCCESS_BTN OCButtonVariant = iota
	ERROR_BTN
	WARNING_BTN
	DEFAULT_BTN
)

type OCButtonProps struct {
	Label   string
	Variant OCButtonVariant
}

templ OCButton(props OCButtonProps) {
	switch (props.Variant) {
		case SUCCESS_BTN:
			<button
				type="button"
				class="bg-success text-white text-xs rounded-sm px-3 py-1.5 cursor-pointer hover:opacity-75 disabled:bg-gray focus:border-none focus:outline-none"
				x-on:click="open()"
			>{ props.Label }</button>
		case ERROR_BTN:
			<button
				type="button"
				class="bg-error text-white text-xs rounded-sm px-3 py-1.5 cursor-pointer hover:opacity-75 disabled:bg-gray focus:border-none focus:outline-none"
				x-on:click="open()"
			>{ props.Label }</button>
		case WARNING_BTN:
			<button
				type="button"
				class="bg-warning text-white text-xs rounded-sm px-3 py-1.5 cursor-pointer hover:opacity-75 disabled:bg-gray focus:border-none focus:outline-none"
				x-on:click="open()"
			>{ props.Label }</button>
		case DEFAULT_BTN:
			<button
				type="button"
				class="bg-primary text-white text-xs rounded-sm px-3 py-1.5 cursor-pointer hover:opacity-75 disabled:bg-gray focus:border-none focus:outline-none"
				x-on:click="open()"
			>{ props.Label }</button>
	}
}

templ OffCanvas(props OffCanvasProps) {
	<div>
		<div x-data={ fmt.Sprintf("offCanvas('%s')", props.ID) } x-init="init()" x-effect="syncStateWithURL()">
			<!-- offCanvas Button -->
			@props.Button
			<!-- offCanvas Backdrop -->
			<div
				x-cloak
				x-show="offCanvasOpen"
				x-on:keydown.esc.window="close()"
				x-on:click.self="close()"
				role="dialog"
				class="fixed inset-0 z-90 bg-neutral-gray/50"
			>
				<!-- offCanvas Sidebar -->
				<div
					x-cloak
					x-show="offCanvasOpen"
					x-transition:enter="transition ease-out duration-200"
					x-transition:enter-start="translate-x-full"
					x-transition:enter-end="translate-x-0"
					x-transition:leave="transition ease-in duration-200"
					x-transition:leave-start="translate-x-0"
					x-transition:leave-end="translate-x-full"
					role="document"
					class="fixed top-0 right-0 flex h-full w-lg flex-col overflow-y-scroll bg-white px-4 pt-4 pb-14 outline-1 outline-gray"
				>
					<!-- Content -->
					{ children... }
				</div>
			</div>
		</div>
		<script>
            (function() {
                 document.addEventListener("alpine:init", () => {
                     Alpine.data("offCanvas", (id) => ({
                         offCanvasOpen: false,
                         init() {
                             const params = new URLSearchParams(window.location.search);
                             this.offCanvasOpen = params.get('offCanvas') === id;
                         },
                         open() {
                             this.offCanvasOpen = true;
                             const params = new URLSearchParams(window.location.search);
                             params.set('offCanvas', id);
                             history.replaceState({}, '', `${window.location.pathname}?${params}`);
                         },
                         close() {
                             this.offCanvasOpen = false;
                             const params = new URLSearchParams(window.location.search);
                             if (params.get('offCanvas') === id) {
                                 params.delete('offCanvas');
                                 history.replaceState({}, '', `${window.location.pathname}?${params}`);
                             }
                         },
                         syncStateWithURL() {
                             const params = new URLSearchParams(window.location.search);
                             this.offCanvasOpen = params.get('offCanvas') === id;
                         },
                     }))
                 })
             })();
        </script>
	</div>
}
